apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer-review-app-deployment
  labels: 
    application: peer-review
    function: frontend-api 
    environment: production
spec:
  selector:
    matchLabels:
      application: peer-review
      function: frontend-api 
      environment: production
  replicas: 2
  template: 
    metadata:
      name: peer-review-app-pod-template
      labels:
        application: peer-review
        function: frontend-api 
        environment: production
        container: peerreview
    spec:
      terminationGracePeriodSeconds: 70
      containers:
        - name: peer-review-app-container
          image: ghcr.io/danielbingham/peerreview:0.2.0
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 200m
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 40"]
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            periodSeconds: 3 
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            failureThreshold: 1
            periodSeconds: 10
          env:
            - name: DEBUG
              value: "peer-review:*"
            - name: NODE_ENV
              value: production
            - name: HOST
              value: https://peer-review.io/
            - name: LOG_LEVEL
              value: info
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: peer-review-database-credentials
                  key: host
                  optional: false
            - name: DATABASE_PORT
              valueFrom:
                secretKeyRef:
                  name: peer-review-database-credentials
                  key: port
                  optional: false
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: peer-review-database-credentials
                  key: username
                  optional: false
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: peer-review-database-credentials
                  key: password
                  optional: false
            - name: REDIS_HOST
              value: peer-review-production-cache-redis-cluster.sh2hpr.0001.use1.cache.amazonaws.com
            - name: REDIS_PORT
              value: '6379'
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: peer-review-session-secret
                  key: session_secret
                  optional: false
            - name: S3_BUCKET_URL
              value: https://peer-review-production-storage.s3.amazonaws.com/
            - name: S3_BUCKET
              value: peer-review-production-storage
            - name: S3_ACCESS_ID
              valueFrom:
                secretKeyRef:
                  name: peer-review-s3-credentials
                  key: access_id
                  optional: false
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: peer-review-s3-credentials
                  key: access_key
                  optional: false
            - name: ORCID_AUTHORIZATION_HOST
              value: https://orcid.org
            - name: ORCID_API_HOST
              value: https://pub.orcid.org
            - name: ORCID_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: peer-review-orcid-secrets
                  key: client_id
                  optional: false
            - name: ORCID_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: peer-review-orcid-secrets
                  key: client_secret
                  optional: false
            - name: ORCID_AUTHENTICATION_REDIRECT_URI
              value: https://peer-review.io/orcid/authentication
            - name: ORCID_CONNECT_REDIRECT_URI
              value: https://peer-review.io/orcid/connect
            - name: POSTMARK_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: peer-review-postmark-secrets
                  key: api_token 
                  optional: false

---
apiVersion: v1
kind: Service
metadata:
  name: peer-review-app-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:843012963492:certificate/765e3fe5-68e0-4ba6-93d2-49d1d3d2c9ef
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-port: '3000'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
spec:
  type: NodePort 
  selector:
    application: peer-review
    function: frontend-api
    environment: production
  ports:
    - name: http
      protocol: TCP
      port: 80 
      targetPort: 3000
    - name: https
      protocol: TCP
      port: 443 
      targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: peer-review-app-ingress 
  labels:
    application: peer-review
    function: frontend-api
    environment: production
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: peer-review-production-ingress 
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:843012963492:certificate/765e3fe5-68e0-4ba6-93d2-49d1d3d2c9ef" 
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=10
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true
spec:
  ingressClassName: alb
  rules:
  - host: peer-review.io
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: peer-review-app-service
            port: 
              number: 80

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: peer-review-app 
  labels:
    application: peer-review
    function: frontend-api
    environment: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: peer-review-app-deployment 
  minReplicas: 2
  maxReplicas: 20 
  targetCPUUtilizationPercentage: 70
